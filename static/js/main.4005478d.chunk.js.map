{"version":3,"sources":["components/Card/PokemonCardDefault/PokemonCard.js","pages/PokemonList/PokemonList.js","pages/PokemonDetail/PokemonDetail.js","Store/actions.js","components/Card/MyPokemonCard/MyPokemonCard.js","pages/MyPokemon/MyPokemon.js","components/Navbar/Navbar.js","components/Header/Header.js","App.js","serviceWorker.js","Store/reducers.js","index.js"],"names":["PokemonCard","props","Card","className","pokemon","owned","Img","variant","src","img","sprites","front_default","Body","Title","name","PokemonList","useState","pokemonData","setData","userPokemon","useSelector","state","pokemonName","getPokemonData","a","fetch","then","r","json","data","copyData","results","entries","index","has","get","concat","useEffect","length","Row","card","i","push","Col","key","xs","sm","md","style","height","x","y","rx","ry","width","map","color","to","PokemonDetail","id","useParams","setPokemon","modalShow","setModalShow","notifFailedShow","setNotifFailedShow","notifSuccessShow","setNotifSuccessShow","formFlag","setFormFlag","dispacth","useDispatch","response","console","log","catch","e","getPokemonDetail","alt","Button","onClick","Math","random","textTransform","weight","base_experience","types","type","Tabs","defaultActiveKey","Tab","eventKey","title","moves","move","Modal","size","aria-labelledby","centered","Form","Header","closeButton","Group","Label","Control","placeholder","isInvalid","Feedback","textAlign","nickname","document","getElementById","value","selectedPokemon","payload","cacthPokemon","savePokemon","show","onHide","Toast","onClose","delay","animation","autohide","MyPokemonCard","handleRemove","MyPokemon","ownedPokemon","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","options","releasePokemon","Navbar","Nav","activeKey","Item","App","path","exact","component","Boolean","window","location","hostname","match","userAgent","navigator","initState","Map","device","test","userPokemonReducer","copyState","action","cloneDeep","set","splice","store","createStore","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4005478d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport './pokemonCard.scss';\r\n\r\nconst PokemonCard = (props) =>(\r\n    <Card className=\"card-custom\">\r\n        <div className=\"card-owned\">Owned: {props.pokemon.owned}</div>\r\n        <Card.Img className=\"card-img\" variant=\"top\" src={props.pokemon.img?props.pokemon.img:props.pokemon.sprites.front_default} />\r\n        <Card.Body className=\"card-body\">\r\n            <Card.Title>{props.pokemon.name}</Card.Title>\r\n        </Card.Body>\r\n    </Card>\r\n)\r\n\r\nexport default PokemonCard;","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport PokemonCard from '../../components/Card/PokemonCardDefault/PokemonCard';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\n\r\n\r\nconst PokemonList = () =>{\r\n    const [pokemonData,setData] = useState([]);\r\n    const userPokemon = useSelector(state=>state.pokemonName);\r\n    \r\n    const getPokemonData = async() =>{\r\n        await fetch(\"https://pokeapi.co/api/v2/pokemon/\").then(r => r.json()).then(data =>{\r\n            let copyData = [...data.results];\r\n            for(let [index,pokemon] of copyData.entries()){\r\n                if(userPokemon.has(index+1))\r\n                    pokemon.owned = userPokemon.get(index+1);\r\n                else\r\n                    pokemon.owned = 0;\r\n                // pokemon.img = `https://github.com/PokeAPI/sprites/blob/master/sprites/pokemon/${index+1}.png?raw=true`\r\n                pokemon.img = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index+1}.png`\r\n\r\n            }\r\n            setData(pokemonData.concat(copyData));\r\n        });\r\n    }\r\n    \r\n    useEffect(() =>{\r\n        getPokemonData();\r\n    },[])\r\n    \r\n\r\n    const ListPokemon = () =>(\r\n        <Row>\r\n        {pokemonData.map((pokemon,index)=>{\r\n            return (\r\n                <Col key={`pokemon_${index}`} className=\"p-2\" xs={6} sm={3} md={2}>\r\n                   <Link style={{color:'initial'}} to={`/pokemon/${index+1}`}><PokemonCard  pokemon={pokemon}/></Link>\r\n                </Col>\r\n            )\r\n        })}\r\n        </Row>\r\n    )\r\n    \r\n    const LoadingSkeleton = () =>{\r\n        let card = []\r\n        for(let i=0;i<3;i++){\r\n            card.push(\r\n                <Col key={`card_${i}`} xs={6} sm={3} md={2}>\r\n                    <div style={{height:'180px'}}>\r\n                        <ContentLoader>\r\n                            <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"120\" height=\"120\" />\r\n                            <rect x=\"0\" y=\"125\" rx=\"4\" ry=\"4\" width=\"120\" height=\"40\" />\r\n                        </ContentLoader>                \r\n                    </div>\r\n                </Col>\r\n             )\r\n        }\r\n\r\n        return card\r\n    }\r\n\r\n    if(pokemonData.length<1){\r\n        return <div>\r\n            <Row>\r\n                <LoadingSkeleton/>\r\n            </Row>\r\n        </div>\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n                <ListPokemon></ListPokemon>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PokemonList;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Row, Col, Tabs, Tab, Button, Modal, Form, Toast } from 'react-bootstrap';\r\nimport './PokemonDetail.scss';\r\nimport { useDispatch } from 'react-redux';\r\nimport { cacthPokemon } from '../../Store/actions';\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\n\r\nconst PokemonDetail = () =>{\r\n    \r\n    const {id} = useParams();\r\n    const [pokemon,setPokemon] = useState({});\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [notifFailedShow, setNotifFailedShow] = useState(false);\r\n    const [notifSuccessShow, setNotifSuccessShow] = useState(false);\r\n    const [formFlag, setFormFlag] = useState(true);\r\n    const dispacth = useDispatch();\r\n\r\n\r\n    const handleCatch = () =>{\r\n        setFormFlag(true);\r\n        setNotifFailedShow(false);\r\n        setNotifSuccessShow(false);\r\n        let chance = Math.random();\r\n        if(chance < 0.5){\r\n            setNotifFailedShow(true);\r\n        }else{\r\n            setNotifFailedShow(false);\r\n            setModalShow(true);\r\n        }\r\n    }\r\n\r\n    const savePokemon = () =>{\r\n        setFormFlag(true)\r\n        let nickname = document.getElementById('nicknamePokemon').value;\r\n        if(nickname.length < 1){\r\n            setFormFlag(false);\r\n        }else{\r\n            let selectedPokemon = {...pokemon};\r\n            selectedPokemon.nickname = nickname;\r\n            dispacth(cacthPokemon(selectedPokemon));\r\n            setModalShow(false);\r\n            setNotifSuccessShow(true);\r\n        }\r\n    }\r\n\r\n    const ModalSuccess = (props) =>{\r\n        return(\r\n            <Modal\r\n            {...props}\r\n            size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n                <Form id=\"formNickname\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Gotcha!\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                            <Form.Group>\r\n                                <Form.Label>Set Nickname</Form.Label>\r\n                                <Form.Control type=\"text\" id=\"nicknamePokemon\" name=\"nickname\" placeholder=\"Enter nickname\"  isInvalid={!formFlag}/>\r\n                                <Form.Control.Feedback type=\"invalid\" style={{textAlign:'left'}}>\r\n                                        Must be filled!\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <div className=\"text-right\">\r\n                                <Button variant=\"danger\" className=\"btn-pokemon\" onClick={()=>savePokemon()}>Save it</Button>\r\n                            </div>\r\n                    </Modal.Body>\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    \r\n    const NotifFail = () =>(\r\n        <div className=\"toast-container\">\r\n            <Toast className=\"toast-fail\" onClose={() => setNotifFailedShow(false)} show={notifFailedShow} delay={3000} animation={true} autohide>\r\n                <Toast.Header>\r\n                    <strong className=\"mr-auto\">Oppsss!</strong>\r\n                </Toast.Header>\r\n                <Toast.Body>Sorry, fail to catch pokemon...</Toast.Body>\r\n            </Toast>\r\n        </div>\r\n    )\r\n\r\n    const NotifSuccess = () =>(\r\n        <div className=\"toast-container\">\r\n            <Toast className=\"toast-success\" onClose={() => setNotifSuccessShow(false)} show={notifSuccessShow}  delay={3000} animation={true} autohide >\r\n                <Toast.Header>\r\n                    <strong className=\"mr-auto\">Save to MyPokemon</strong>\r\n                </Toast.Header>\r\n                <Toast.Body>Congrats, success to catch pokemon...</Toast.Body>\r\n            </Toast>\r\n        </div>\r\n    )\r\n\r\n    const SkeletonLoading = () =>(\r\n        <ContentLoader  height={500}>\r\n            <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"300\" height=\"300\" />\r\n            <rect x=\"0\" y=\"315\" rx=\"4\" ry=\"4\" width=\"300\" height=\"40\" />\r\n            <rect x=\"0\" y=\"375\" rx=\"4\" ry=\"4\" width=\"300\" height=\"40\" />\r\n            <rect x=\"0\" y=\"425\" rx=\"4\" ry=\"4\" width=\"300\" height=\"40\" />\r\n        </ContentLoader> \r\n    )\r\n    \r\n    useEffect(()=>{\r\n        const getPokemonDetail = async(id) =>{\r\n            await fetch(`https://pokeapi.co/api/v2/pokemon/${id}/`).then(r=>r.json())\r\n            .then(response =>{\r\n                console.log(response);\r\n                setPokemon(response);\r\n            }).catch(e =>{\r\n                console.log(e)\r\n            })\r\n        }\r\n        getPokemonDetail(id);\r\n    },[id])\r\n\r\n    if(pokemon.sprites){\r\n        return (\r\n            <div className=\"text-center\">\r\n                <div>\r\n                    <img className=\"pokemon-detail-img\" alt=\"\" src={pokemon.sprites.front_default}/>\r\n                </div>\r\n                <div className=\"pokemon-detai-desc\">\r\n                    <div className=\"catch-pokemon-container\">\r\n                        <Button variant=\"danger\" className=\"cacth-btn\" onClick={()=>handleCatch()}> \r\n                            <img className=\"pokeball-img\" alt=\"\" src=\"/icons8-open-pokeball.png\"/>\r\n                            Catch Pokemon\r\n                        </Button>\r\n                    </div>\r\n                    <h3 className=\"mt-4\" style={{textTransform:'capitalize'}}>{pokemon.name}</h3>\r\n                    <div className=\"pokemon-info-etc\">\r\n                        Weight: {pokemon.weight} <br/>\r\n                        Height: {pokemon.height} <br/>\r\n                        Base Exp: {pokemon.base_experience}\r\n                    </div>\r\n                    <div className=\"d-flex type-list\">\r\n                        {pokemon.types.map((type,index)=>{\r\n                            return(\r\n                                   <div key={`type_${index}`} className=\"type-label\"> {type.type.name} </div> \r\n                            )   \r\n                        })}\r\n                    </div>\r\n                   \r\n                    <Tabs defaultActiveKey=\"moves\">\r\n                        <Tab eventKey=\"moves\" title=\"Moves\">\r\n                            <Row className=\"my-2 moves-container\">\r\n                                {pokemon.moves.map((move,index)=>{\r\n                                    return(\r\n                                        <Col key={`move_${index}`} className=\"text-center move-card py-2\" xs={6}>\r\n                                            <div className=\"move-label\">{move.move.name}</div>\r\n                                        </Col> \r\n                                    )   \r\n                                })}\r\n                            </Row>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </div>\r\n                <ModalSuccess\r\n                    show={modalShow}\r\n                    onHide={() => setModalShow(false)}\r\n                />\r\n                <NotifSuccess/>\r\n                <NotifFail/>\r\n            </div>\r\n        )\r\n    }else{\r\n        return <SkeletonLoading/>\r\n    }\r\n}\r\n\r\nexport default PokemonDetail;","export const cacthPokemon = (pokemon) =>{\r\n    return{\r\n        type:'CATCH',\r\n        payload:pokemon\r\n    };\r\n};\r\n\r\nexport const releasePokemon = (pokemon,index) =>{\r\n    return{\r\n        type:'RELEASE',\r\n        payload:{pokemon:pokemon,index:index}\r\n    };\r\n};","import React from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport './myPokemonCard.scss';\r\n\r\nconst MyPokemonCard = (props) =>{\r\n    \r\n    return(\r\n    <Card className=\"card-custom\">\r\n        <div className=\"card-owned\">{props.pokemon.nickname}</div>\r\n        <Card.Img className=\"card-img\" variant=\"top\" src={props.pokemon.img?props.pokemon.img:props.pokemon.sprites.front_default} />\r\n        <Card.Body className=\"card-body\">\r\n            <Card.Title>{props.pokemon.name}</Card.Title>\r\n            <div className=\"mt-2\">\r\n                <Button variant=\"danger\" onClick={()=>props.handleRemove()} className=\"release-btn\">Release</Button>\r\n            </div>\r\n        </Card.Body>\r\n    </Card>\r\n)}\r\n\r\nexport default MyPokemonCard;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport MyPokemonCard from '../../components/Card/MyPokemonCard/MyPokemonCard';\r\nimport { releasePokemon } from '../../Store/actions';\r\nimport Lottie from 'react-lottie'\r\nimport animationData from '../../lotties/empty.json'\r\n\r\n\r\n\r\nconst MyPokemon = () =>{\r\n    const ownedPokemon = useSelector(state=> state.pokemon);\r\n    const dispacth= useDispatch();\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true, \r\n        animationData: animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    };\r\n\r\n\r\n    const ListPokemon = () =>(\r\n        <Row>\r\n            {ownedPokemon.map((pokemon,index)=>{\r\n                return (\r\n                    <Col key={`pokemon_${index}`} className=\"p-2\" xs={6} sm={4} md={3}>\r\n                        <MyPokemonCard handleRemove={()=>dispacth(releasePokemon(pokemon,index))}  pokemon={pokemon}/>\r\n                    </Col>\r\n                )\r\n            })}\r\n        </Row>\r\n    )\r\n    \r\n    if(ownedPokemon.length < 1){\r\n        return (\r\n            <div className=\"text-center\">\r\n                <Lottie options={defaultOptions}\r\n                            height={125}\r\n                            width={125}\r\n                            />\r\n                <div style={{color:'grey'}}>\r\n                    <h4>Sorry, you don't have pokemon....</h4>\r\n                    <h2 className=\"mt-3\">\"gotta catch 'em all\"</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div>        \r\n                <ListPokemon/>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default MyPokemon;","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport './navbar.scss'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () =>(\r\n    <Nav className=\"justify-content-center bottom-navbar\" activeKey=\"/\">\r\n        <Nav.Item>\r\n            <Link className=\"link-custom\" to=\"/\">\r\n                <img src=\"/pokemon-pokelist.png\" alt=\"\"/>\r\n                <div>Home</div>\r\n            </Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n            <Link className=\"link-custom\" to=\"/myPokemon\">\r\n                <img src=\"/pokemon-mypokemon.png\" alt=\"\"/>\r\n                <div>My Pokemon</div>\r\n            </Link>\r\n        </Nav.Item>\r\n     </Nav>\r\n)\r\n\r\nexport default Navbar","import React from 'react';\r\nimport './header.scss'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () =>(\r\n    <div className=\"header-custom\">\r\n        <Link to=\"/\"><img src=\"/International_Pokémon_logo.png\" alt=\"\"/></Link>\r\n    </div>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\r\nimport PokemonList from './pages/PokemonList/PokemonList';\r\nimport PokemonDetail from './pages/PokemonDetail/PokemonDetail';\r\nimport MyPokemon from './pages/MyPokemon/MyPokemon';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Header from './components/Header/Header';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header/>\r\n      <div className=\"App m-4\">\r\n          <Navbar/>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={PokemonList}/>\r\n            <Route path=\"/myPokemon\" component={MyPokemon}/>\r\n            <Route path=\"/pokemon/:id\" component={PokemonDetail}/>\r\n            <Route component={PokemonList}/>\r\n          </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nimport cloneDeep from 'lodash/cloneDeep';\r\n\r\nconst userAgent = navigator.userAgent;\r\nconst setDevice = () =>{\r\n    if(/android|iPhone|iPod/i.test(userAgent)){ //mobile device\r\n        return 'mobile'\r\n    }else { \r\n        return 'desktop'\r\n    }\r\n}\r\n\r\nconst initState = {\r\n    pokemon :[],\r\n    pokemonName: new Map(),\r\n    device : setDevice()\r\n}\r\n\r\nconsole.log(initState);\r\n\r\nconst userPokemonReducer =(state=initState,action) =>{\r\n    let copyState;\r\n    switch(action.type){\r\n        case 'CATCH':\r\n            copyState = cloneDeep(state);\r\n    \r\n            if(copyState.pokemonName.has(action.payload.id)){\r\n                copyState.pokemonName.set(action.payload.id,copyState.pokemonName.get(action.payload.id)+1);\r\n            }else{\r\n                copyState.pokemonName.set(action.payload.id,1);\r\n            }\r\n            copyState.pokemon.push(action.payload);\r\n\r\n            return {...state,pokemon:copyState.pokemon,pokemonName:copyState.pokemonName}\r\n\r\n        case 'RELEASE':\r\n            copyState = cloneDeep(state);;\r\n            copyState.pokemon.splice(action.payload.index,1);\r\n            copyState.pokemonName.set(action.payload.pokemon.id,copyState.pokemonName.get(action.payload.pokemon.id)-1);\r\n\r\n            return {...state,pokemon:copyState.pokemon,pokemonName:copyState.pokemonName}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userPokemonReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport userPokemonReducer from './Store/reducers'\r\n\r\nconst store = createStore(userPokemonReducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}